stages:
  - trigger-package
  - trigger-docker
  - trigger-ha-validate
  - trigger-qa
  - check
  - prepare
  - tests
  - post-test
  - package
  - scan-dependencies
  - images
  - staging_upload
  - trigger-packages
  - package-release
  - trigger-images
  - image-release
  - validate
  - metrics
  - slow_jobs
  - raspbian-release
  - notification_fail

variables:
  BUILDER_IMAGE_REGISTRY: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder"
  BUILDER_IMAGE_REVISION: "0.0.24"
  ASSET_SYNC_EXISTING_REMOTE_FILES: "keep"
  ASSET_SYNC_GZIP_COMPRESSION: "true"

# Templates
## Runs on GitLab.com only
.dedicated-runner: &dedicated-runner
  tags:
    - gitlab-org

.knapsack-state: &knapsack-state
  services: []
  cache:
    key: "knapsack"
    paths:
    - knapsack/
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/

.knapsack: &prepare_knapsack
  <<: *knapsack-state
  <<: *dedicated-runner
  stage: prepare
  before_script: []
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export DISTRO_NAME=${JOB_NAME[0]}
    - export DISTRO_VERSION=${JOB_NAME[1]}
    - mkdir -p knapsack/
    - '[[ -f knapsack/${DISTRO_NAME}_${DISTRO_VERSION}_main_rspec_report.json ]] || echo "{}" > knapsack/${DISTRO_NAME}_${DISTRO_VERSION}_main_rspec_report.json'
  except:
    - branches@gitlab/omnibus-gitlab
    - tags@gitlab/omnibus-gitlab
    - triggers
  retry: 1

.spec_template: &run_rspec
  stage: tests
  <<: *dedicated-runner
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export DISTRO_NAME=${JOB_NAME[0]}
    - export DISTRO_VERSION=${JOB_NAME[1]}
    - export CI_NODE_INDEX=${JOB_NAME[3]}
    - export CI_NODE_TOTAL=${JOB_NAME[4]}
    - export KNAPSACK_REPORT_PATH=knapsack/${DISTRO_NAME}_${DISTRO_VERSION}_rspec_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - export USE_KNAPSACK=true
    # To prevent current OS providing empty/old reports of other OSs as an
    # artifact. If not, they may overwrite the valid/new reports from those
    # corresponding OSs. So, removing everything except current OS's report.
    - cp knapsack/${DISTRO_NAME}_${DISTRO_VERSION}_main_rspec_report.json ${KNAPSACK_REPORT_PATH}.bak
    - rm -f knapsack/*.json
    - mv ${KNAPSACK_REPORT_PATH}.bak ${KNAPSACK_REPORT_PATH}
    - bundle exec rake knapsack:rspec
  except:
    - branches@gitlab/omnibus-gitlab
    - tags@gitlab/omnibus-gitlab
    - triggers
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - gems
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/
  retry: 1

## Runs on dev.gitlab.org
.branch_template: &branch_build
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    - bundle exec rake cache:populate
    - bundle exec rake cache:restore
    - bundle exec rake build:project build:package:sync
    - bundle exec rake cache:bundle
  tags:
  - docker-builder
  only:
    - branches@gitlab/omnibus-gitlab
  artifacts:
    expire_in: 1 day
    paths:
      - pkg/
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  retry: 1

.rpi_branch_template: &rpi_branch_build
  stage: slow_jobs
  variables:
    NO_SOURCEMAPS: "true"
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    - bundle exec rake cache:populate
    - bundle exec rake cache:restore
    - if ./support/is_gitlab_ee.sh; then exit 0; else bundle exec rake build:project build:package:sync ;fi
    - bundle exec rake cache:bundle
  tags:
  - docker-rpi-builder
  only:
  - branches@gitlab/omnibus-gitlab
  artifacts:
    expire_in: 1 day
    paths:
      - pkg/
  dependencies: []
  retry: 1

.tag_template: &tag_build
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    # Set ASSET_SYNC_ENABLED for Ubuntu 16.04 tag builds to sync rails assets to an S3 bucket
    - if [ "$CI_JOB_NAME" == "Ubuntu-16.04" ]; then export ASSET_SYNC_ENABLED=true; fi
    - bundle exec rake cache:populate
    - bundle exec rake cache:restore
    - bundle exec rake release:package
    - bundle exec rake cache:bundle
  tags:
  - docker-builder
  only:
    - tags@gitlab/omnibus-gitlab
  artifacts:
    expire_in: 7 days
    paths:
      - pkg/
  cache:
    key: "${CI_JOB_NAME}-branch-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  retry: 1

dependency_scanning:
  image: alpine:3.7
  stage: scan-dependencies
  allow_failure: true
  variables:
    TERM: xterm-256color
    REPORT_PATH: ./
  before_script:
    - apk update && apk add curl jq bash bc coreutils
  script:
    - curl -sSL https://gitlab.com/gitlab-org/security-products/gitlab-depscan/raw/master/gitlab-depscan.sh|bash -s pkg/ubuntu-xenial/version-manifest.json
  only:
    - tags@gitlab/omnibus-gitlab
    - schedules@gitlab/omnibus-gitlab
    - triggers@gitlab/omnibus-gitlab
  dependencies:
    - Ubuntu-16.04
    - Ubuntu-16.04-branch
  artifacts:
    expire_in: 7 days
    when: on_failure
    paths:
      - dependency_report.txt
      - gl-dependency-scanning-report.json

.rpi_tag_template: &rpi_tag_build
  stage: slow_jobs
  variables:
    NO_SOURCEMAPS: "true"
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    - bundle exec rake cache:populate
    - bundle exec rake cache:restore
    - if ./support/is_gitlab_ee.sh; then exit 0; else bundle exec rake release:package ;fi
    - bundle exec rake cache:bundle
  tags:
  - docker-rpi-builder
  only:
    - tags@gitlab/omnibus-gitlab
  artifacts:
    expire_in: 7 days
    paths:
      - pkg/
  dependencies: []
  retry: 1

### This stage is used for uploading packages
### 1. To a staging package repository
### 2. Always ran on dev.gitlab.org
.staging_upload_template: &staging_upload
  stage: staging_upload
  image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:omnibus-gitlab-xenial"
  script:
    - if [ -n "$RUN_ONLY_EE" ] && ! ./support/is_gitlab_ee.sh; then exit 0; fi
    - bundle exec rake repository:upload:staging[$STAGING_REPO]
  artifacts:
    expire_in: 7 days
    paths:
      - pkg/
  only:
    - tags@gitlab/omnibus-gitlab
    - schedules@gitlab/omnibus-gitlab
    - triggers@gitlab/omnibus-gitlab
  retry: 1
  tags:
  - promotion

### This stage is ran only on tag:
### 1. It is a manual action
### 2. It will upload the package to public, user facing repositories
### 3. Only ran on dev.gitlab.org
.production_release_template: &production_release
  stage: package-release
  image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:omnibus-gitlab-xenial"
  script:
    - if [ -n "$RUN_ONLY_EE" ] && ! ./support/is_gitlab_ee.sh; then exit 0; fi
    - bundle exec rake repository:upload:production
  only:
    - tags@gitlab/omnibus-gitlab
  when: manual
  tags:
  - promotion

before_script:
  - echo $NIGHTLY
  - mkdir -p ~/.ssh
  - mkdir -p ~/.aws
  - mkdir -p cache
  - bundle install -j $(nproc) --binstubs --path gems --without rubocop
  # If ALTERNATIVE_SOURCES are used, the public mirror for omnibus will be used.
  # This will alter Gemfile.lock file. As part of the build pipeline, we are
  # checking whether the state of the repository is unchanged during the build
  # process, by comparing it with the last commit (So that no unexpected monsters
  # show up). So, an altered Gemfile.lock file will fail on this
  # check. Hence we do a git commit as part of the pipeline if
  # ALTERNATIVE_SOURCES is used.
  - if [ -n "$ALTERNATIVE_SOURCES" ]; then
        git config --global user.email "packages@gitlab.com"
        && git config --global user.name "GitLab Inc."
        && git add Gemfile.lock
        && git commit -m "Updating Gemfile.lock";
    fi
  - if [ -n "$NIGHTLY" ]; then export STAGING_REPO=nightly-builds; fi

# Jobs
## Runs on GitLab.com only
rubocop:
  stage: check
  <<: *dedicated-runner
  image: ruby:2.4
  before_script:
    - bundle install -j $(nproc) --binstubs --path gems --without default test
  script:
    - bundle exec rubocop --parallel
  except:
    - branches@gitlab/omnibus-gitlab
    - tags@gitlab/omnibus-gitlab
    - triggers
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - gems

docs-check-links:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:nanoc-bootstrap-ruby-2.4-alpine"
  stage: check
  cache: {}
  dependencies: []
  before_script: []
  <<: *dedicated-runner
  script:
    - mv doc/ /nanoc/content/
    - cd /nanoc
    # Build HTML from Markdown
    - bundle exec nanoc
    # Check the internal links
    - bundle exec nanoc check internal_links
  except:
    - branches@gitlab/omnibus-gitlab
    - tags@gitlab/omnibus-gitlab
    - triggers

danger-review:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:danger
  stage: check
  cache: {}
  dependencies: []
  before_script: []
  only:
    refs:
      - branches@gitlab-org/omnibus-gitlab
  script:
    - danger --fail-on-errors=true

Centos 6 knapsack: *prepare_knapsack
Centos 7 knapsack: *prepare_knapsack
Debian 7 knapsack: *prepare_knapsack
Debian 8 knapsack: *prepare_knapsack
Debian 9.1 knapsack: *prepare_knapsack
OpenSUSE 42.3 knapsack: *prepare_knapsack
Ubuntu 14.04 knapsack: *prepare_knapsack
Ubuntu 16.04 knapsack: *prepare_knapsack
Ubuntu 18.04 knapsack: *prepare_knapsack

update-knapsack:
  <<: *knapsack-state
  <<: *dedicated-runner
  stage: post-test
  before_script: []
  script:
    - support/merge-reports knapsack
    - rm -f knapsack/*node*
  except:
    - branches@gitlab/omnibus-gitlab
    - tags@gitlab/omnibus-gitlab
    - triggers
  retry: 1

Trigger:package:
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  stage: trigger-package
  script:
    - if [ -n "$TRIGGERED_USER" ] && [ -n "$TRIGGER_SOURCE" ]; then echo "Pipeline triggered by $TRIGGERED_USER at $TRIGGER_SOURCE"; fi
    - bundle exec rake cache:populate
    - bundle exec rake cache:restore
    - bundle exec rake build:project
    - bundle exec rake cache:bundle
    # Renaming so we can easily generate the artifact URL
    - mv pkg/ubuntu-xenial/*.deb pkg/ubuntu-xenial/gitlab.deb
  only:
    - triggers@gitlab-org/omnibus-gitlab
  artifacts:
    expire_in: 1 day
    paths:
      - pkg/
  cache:
    key: "Ubuntu-16.04-branch-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  tags:
    - triggered-packages

Trigger:gitlab-docker:
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:${BUILDER_IMAGE_REVISION}"
  stage: trigger-docker
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
  - docker:dind
  script:
    - if [ -n "$TRIGGERED_USER" ] && [ -n "$TRIGGER_SOURCE" ]; then echo "Pipeline triggered by $TRIGGERED_USER at $TRIGGER_SOURCE"; fi
    # While triggering from omnibus repo in .com, we explicitly pass IMAGE_TAG
    # variable, which will be used to tag the final Docker image.
    # So, if IMAGE_TAG variable is empty, it means the trigger happened from
    # either CE or EE repository. In that case, we can use the GITLAB_VERSION
    # variable as IMAGE_TAG.
    - if [ -z "${IMAGE_TAG}" ]; then export IMAGE_TAG=${GITLAB_VERSION}; fi
    - bundle exec rake docker:build:image
    - bundle exec rake docker:push:triggered
  only:
    - triggers@gitlab-org/omnibus-gitlab

Trigger:qa-docker:
  stage: trigger-docker
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
  - docker:dind
  script:
    - if [ -n "$TRIGGERED_USER" ] && [ -n "$TRIGGER_SOURCE" ]; then echo "Pipeline triggered by $TRIGGERED_USER at $TRIGGER_SOURCE"; fi
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    # For builds triggered from omnibus project, we are explicitly specifying IMAGE_TAG
    - if [ -z "$IMAGE_TAG" ]; then export IMAGE_TAG=$GITLAB_VERSION; fi
    - bundle exec rake qa:build
    - bundle exec rake qa:push:triggered
  only:
    - triggers@gitlab-org/omnibus-gitlab
  dependencies:
    - Trigger:package

Trigger:qa-test:
  stage: trigger-qa
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:${BUILDER_IMAGE_REVISION}"
  script:
    - if [ -n "$TRIGGERED_USER" ] && [ -n "$TRIGGER_SOURCE" ]; then echo "Pipeline triggered by $TRIGGERED_USER at $TRIGGER_SOURCE"; fi
    # For builds triggered from omnibus project, we are explicitly specifying IMAGE_TAG
    - if [ -z "$IMAGE_TAG" ]; then export IMAGE_TAG=$GITLAB_VERSION; fi
    - bundle exec rake qa:test
  only:
    - triggers@gitlab-org/omnibus-gitlab
  dependencies: []

Trigger:ce-package:
  image: "ruby:2.4"
  stage: trigger-package
  <<: *dedicated-runner
  when: manual
  script:
    - bundle exec rake build:trigger
  only:
    - branches@gitlab-org/omnibus-gitlab
  except:
    - triggers

Trigger:ee-package:
  image: "ruby:2.4"
  stage: trigger-package
  <<: *dedicated-runner
  when: manual
  variables:
    ee: "true"
  script:
    - bundle exec rake build:trigger
  only:
    - branches@gitlab-org/omnibus-gitlab
  except:
    - triggers

Trigger:ha-validate:
  stage: trigger-ha-validate
  image: "ruby:2.4"
  when: manual
  script:
      - bundle exec rake qa:ha:validate
  only:
    - triggers@gitlab-org/omnibus-gitlab
  dependencies:
    - Trigger:ee-package

Ubuntu 14.04 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 14.04 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 14.04 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 14.04 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 14.04 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 14.04 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-trusty"
  <<: *run_rspec
  dependencies:
  - Ubuntu 14.04 knapsack
Ubuntu 16.04 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 16.04 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 16.04 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 16.04 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 16.04 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 16.04 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-xenial"
  <<: *run_rspec
  dependencies:
  - Ubuntu 16.04 knapsack
Ubuntu 18.04 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Ubuntu 18.04 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Ubuntu 18.04 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Ubuntu 18.04 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Ubuntu 18.04 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Ubuntu 18.04 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-bionic"
  <<: *run_rspec
  dependencies:
  - Ubuntu 18.04 knapsack
Debian 7 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 7 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 7 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 7 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 7 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 7 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-wheezy"
  <<: *run_rspec
  dependencies:
  - Debian 7 knapsack
Debian 8 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 8 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 8 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 8 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 8 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 8 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-jessie"
  <<: *run_rspec
  dependencies:
  - Debian 8 knapsack
Debian 9.1 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Debian 9.1 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Debian 9.1 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Debian 9.1 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Debian 9.1 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Debian 9.1 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-stretch"
  <<: *run_rspec
  dependencies:
  - Debian 9.1 knapsack
Centos 6 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 6 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 6 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 6 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 6 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 6 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos6"
  <<: *run_rspec
  dependencies:
  - Centos 6 knapsack
Centos 7 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
Centos 7 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
Centos 7 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
Centos 7 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
Centos 7 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
Centos 7 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-centos7"
  <<: *run_rspec
  dependencies:
  - Centos 7 knapsack
OpenSUSE 42.3 specs 0 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack
OpenSUSE 42.3 specs 1 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack
OpenSUSE 42.3 specs 2 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack
OpenSUSE 42.3 specs 3 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack
OpenSUSE 42.3 specs 4 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack
OpenSUSE 42.3 specs 5 6:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:omnibus-gitlab-opensuse42.3"
  <<: *run_rspec
  dependencies:
  - OpenSUSE 42.3 knapsack

# dev.gitlab.org only
# Release build
Ubuntu-14.04:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_14.04:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
Ubuntu-16.04:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
Ubuntu-18.04:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_18.04:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
Debian-7:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_7:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
Debian-8:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_8:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
Debian-9.1:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_9:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
CentOS-6:
  image: "${BUILDER_IMAGE_REGISTRY}/centos_6:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
CentOS-7:
  image: "${BUILDER_IMAGE_REGISTRY}/centos_7:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
OpenSUSE-42.3:
  image: "${BUILDER_IMAGE_REGISTRY}/opensuse_42.3:${BUILDER_IMAGE_REVISION}"
  <<: *tag_build
SLES-12:
  image: "${BUILDER_IMAGE_REGISTRY}/sles_12sp2:${BUILDER_IMAGE_REVISION}"
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
    - echo $PACKAGECLOUD_REPO
    - if ./support/is_gitlab_ee.sh; then
        bundle exec rake cache:populate;
        bundle exec rake cache:restore;
        bundle exec rake release:package;
        bundle exec rake cache:bundle;
      else
        exit 0;
      fi
  only:
    - tags@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  artifacts:
    expire_in: 7 days
    paths:
      - pkg/
  cache:
    key: "${CI_JOB_NAME}-branch-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  retry: 1

Docker:
  stage: images
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
  - docker:dind
  script:
  - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
  - echo $PACKAGECLOUD_REPO
  - bundle exec rake docker:build:image
  - bundle exec rake docker:push:staging
  only:
    - tags@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies: []
  retry: 1

Docker-QA:
  stage: images
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - bundle exec rake qa:build qa:push:staging
  only:
    - tags@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies: []
  retry: 1

HA-Validate-Tagged:
  stage: slow_jobs
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  script:
    - './support/is_gitlab_ee.sh || exit 0'
    - bundle exec rake qa:ha:tag
  only:
    - tags@gitlab/omnibus-gitlab
  dependencies: []
  allow_failure: true

Raspberry-Pi-2-Jessie:
  image: "${BUILDER_IMAGE_REGISTRY}/rpi_8:${BUILDER_IMAGE_REVISION}"
  cache:
    key: "${CI_JOB_NAME}-branch-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  <<: *rpi_tag_build

Raspberry-Pi-2-Stretch:
  image: "${BUILDER_IMAGE_REGISTRY}/rpi_9:${BUILDER_IMAGE_REVISION}"
  cache:
    key: "${CI_JOB_NAME}-branch-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  <<: *rpi_tag_build

## Building from branch
Ubuntu-14.04-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_14.04:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
Ubuntu-16.04-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
Ubuntu-18.04-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_18.04:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
Debian-7-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_7:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
Debian-8-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_8:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
Debian-9.1-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/debian_9:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
CentOS-6-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/centos_6:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
CentOS-7-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/centos_7:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
OpenSUSE-42.3-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/opensuse_42.3:${BUILDER_IMAGE_REVISION}"
  <<: *branch_build
SLES-12-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/sles_12sp2:${BUILDER_IMAGE_REVISION}"
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    # GPG key for package signing
    - AWS_ACCESS_KEY_ID="$SECRET_AWS_ACCESS_KEY_ID" AWS_SECRET_ACCESS_KEY="$SECRET_AWS_SECRET_ACCESS_KEY" aws s3 cp s3://omnibus-sig/package.sig.key .
    - gpg --batch --no-tty --allow-secret-key-import --import package.sig.key
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
    - echo $PACKAGECLOUD_REPO
    - if ./support/is_gitlab_ee.sh; then
        bundle exec rake cache:populate;
        bundle exec rake cache:restore;
        bundle exec rake build:project build:package:sync;
        bundle exec rake cache:bundle;
      else
        exit 0;
      fi
  only:
    - branches@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  artifacts:
    expire_in: 1 day
    paths:
      - pkg/
  retry: 1

Docker-branch:
  stage: images
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
  - docker:dind
  script:
  - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
  - echo $PACKAGECLOUD_REPO
  - bundle exec rake docker:build:image
  - bundle exec rake docker:push:staging
  - bundle exec rake docker:push:nightly
  only:
    - branches@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies: []
  retry: 1

QA-Master:
  stage: images
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
    QA_SCREENSHOTS_DIR: $CI_PROJECT_DIR/screenshots
  services:
  - docker:dind
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - bundle exec rake qa:build
    - bundle exec rake qa:push:nightly
  artifacts:
    when: on_failure
    expire_in: 7d
    paths:
    - screenshots/
  allow_failure: true
  only:
    - branches@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies:
    - Ubuntu-16.04-branch
  retry: 1

HA-Validate-Nightly:
  stage: slow_jobs
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  script:
    - './support/is_gitlab_ee.sh || exit 0'
    - '[[ -n "${NIGHTLY}" ]] || exit 0'
    - bundle exec rake qa:ha:nightly
  only:
    - schedules@gitlab/omnibus-gitlab
  dependencies: []

Raspberry-Pi-2-Jessie-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/rpi_8:${BUILDER_IMAGE_REVISION}"
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  <<: *rpi_branch_build

Raspberry-Pi-2-Stretch-branch:
  image: "${BUILDER_IMAGE_REGISTRY}/rpi_9:${BUILDER_IMAGE_REVISION}"
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
    - assets_cache
    - node_modules
  <<: *rpi_branch_build

notify:slack-fail:
  before_script:
    - apk update && apk add git curl bash
  image: "alpine"
  stage: notification_fail
  script:
    - ./support/notify_slack.sh "#distribution" "Build on \`$CI_COMMIT_REF_NAME\` failed! See <https://dev.gitlab.org/gitlab/omnibus-gitlab/pipelines/"$CI_PIPELINE_ID">"
  when: on_failure
  only:
    - master
    - tags@gitlab/omnibus-gitlab
  except:
    - triggers@gitlab-org/omnibus-gitlab
  tags:
  - promotion
  dependencies: []

# Staging upload
Ubuntu-14.04-staging:
  dependencies:
    - Ubuntu-14.04
    - Ubuntu-14.04-branch
  <<: *staging_upload
Ubuntu-16.04-staging:
  dependencies:
    - Ubuntu-16.04
    - Ubuntu-16.04-branch
  <<: *staging_upload
Ubuntu-18.04-staging:
  dependencies:
    - Ubuntu-18.04
    - Ubuntu-18.04-branch
  <<: *staging_upload
Debian-7-staging:
  dependencies:
    - Debian-7
    - Debian-7-branch
  <<: *staging_upload
Debian-8-staging:
  dependencies:
    - Debian-8
    - Debian-8-branch
  <<: *staging_upload
Debian-9.1-staging:
  dependencies:
    - Debian-9.1
    - Debian-9.1-branch
  <<: *staging_upload
CentOS-6-staging:
  dependencies:
    - CentOS-6
    - CentOS-6-branch
  <<: *staging_upload
CentOS-7-staging:
  dependencies:
    - CentOS-7
    - CentOS-7-branch
  <<: *staging_upload
OpenSUSE-42.3-staging:
  dependencies:
    - OpenSUSE-42.3
    - OpenSUSE-42.3-branch
  <<: *staging_upload
SLES-12-staging:
  variables:
    RUN_ONLY_EE: 'true'
  dependencies:
    - SLES-12
    - SLES-12-branch
  allow_failure: true
  <<: *staging_upload

# Release
Ubuntu-14.04-release:
  dependencies:
    - Ubuntu-14.04
  <<: *production_release
Ubuntu-16.04-release:
  dependencies:
    - Ubuntu-16.04
  <<: *production_release
Ubuntu-18.04-release:
  dependencies:
    - Ubuntu-18.04
  <<: *production_release
Debian-7-release:
  dependencies:
    - Debian-7
  <<: *production_release
Debian-8-release:
  dependencies:
    - Debian-8
  <<: *production_release
Debian-9.1-release:
  dependencies:
    - Debian-9.1
  <<: *production_release
CentOS-6-release:
  dependencies:
    - CentOS-6
  <<: *production_release
CentOS-7-release:
  dependencies:
    - CentOS-7
  <<: *production_release
OpenSUSE-42.3-release:
  dependencies:
    - OpenSUSE-42.3
  <<: *production_release
SLES-12-release:
  variables:
    RUN_ONLY_EE: 'true'
  dependencies:
    - SLES-12
  allow_failure: true
  <<: *production_release

Raspberry-Pi-2-Jessie-release:
  stage: raspbian-release
  image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:omnibus-gitlab-xenial"
  script:
    - export RASPBERRY_REPO=raspberry-pi2
    - bundle exec rake repository:upload:production
  only:
    - tags@gitlab/omnibus-gitlab
  when: manual
  dependencies:
    - Raspberry-Pi-2-Jessie
  tags:
  - promotion

Raspberry-Pi-2-Stretch-release:
  stage: raspbian-release
  image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:omnibus-gitlab-xenial"
  script:
    - export RASPBERRY_REPO=raspberry-pi2
    - bundle exec rake repository:upload:production
  only:
    - tags@gitlab/omnibus-gitlab
  when: manual
  dependencies:
    - Raspberry-Pi-2-Stretch
  tags:
  - promotion

Docker-Release:
  stage: image-release
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
  services:
  - docker:dind
  script:
    - bundle exec rake release:docker
  only:
    - tags@gitlab/omnibus-gitlab
  dependencies: []
  when: manual

AWS:
  stage: image-release
  image: "${BUILDER_IMAGE_REGISTRY}/jessie_packer:${BUILDER_IMAGE_REVISION}"
  script:
  # aws-sdk gem gives priority to environment variables over config file. So, using correct values for those variables.
  - export AWS_ACCESS_KEY_ID=$AWS_AMI_ACCESS_KEY_ID
  - export AWS_SECRET_ACCESS_KEY=$AWS_AMI_SECRET_ACCESS_KEY
  - bundle exec rake aws:process
  allow_failure: true
  tags:
  - docker-builder
  when: manual
  only:
    - tags@gitlab/omnibus-gitlab
  dependencies: []
  retry: 1

QA-Tag:
  stage: image-release
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
    QA_SCREENSHOTS_DIR: $CI_PROJECT_DIR/screenshots
  services:
  - docker:dind
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - bundle exec rake release:qa
  artifacts:
    when: on_failure
    expire_in: 7d
    paths:
    - screenshots/
  allow_failure: true
  only:
    - tags@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies:
    - Ubuntu-16.04
  retry: 1
  when: manual

upgrade:
  stage: metrics
  image: "${BUILDER_IMAGE_REGISTRY}/ubuntu_16.04:${BUILDER_IMAGE_REVISION}"
  script:
    - echo $GCP_SERVICE_ACCOUNT > service_account.json
    - bundle exec rake metrics:upgrade_package
  allow_failure: true
  when: manual
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
  only:
    - tags@gitlab/omnibus-gitlab
  tags:
  - docker-builder
  dependencies: []

release:packages:
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:${BUILDER_IMAGE_REVISION}"
  stage: trigger-packages
  script:
    - bundle exec ruby support/trigger-release.rb package-release
  when: manual
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
  only:
    - tags@gitlab/omnibus-gitlab
  dependencies: []

release:images:
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:${BUILDER_IMAGE_REVISION}"
  stage: trigger-images
  script:
    - bundle exec ruby support/trigger-release.rb image-release
    - bundle exec ruby support/trigger-release.rb metrics
  when: manual
  cache:
    key: "${CI_JOB_NAME}-${BUILDER_IMAGE_REVISION}"
    paths:
    - cache
    - gems
  only:
    - tags@gitlab/omnibus-gitlab
  dependencies: []
