stages:
  - tests
  - package
  - notification_fail
  - extra
  - notification_fail

before_script:
  - echo $NIGHTLY
  - mkdir -p ~/.ssh
  - mkdir -p ~/.aws
  - mkdir -p cache
  - bundle install -j $(nproc) --binstubs --path gems
  - if [ -n "$NIGHTLY" ] ; then export NIGHTLY_REPO=nightly-builds ;fi

# Runs on GitLab.com only
.spec_template: &run_rspec
  stage: tests
  script:
    - bundle exec rspec -f documentation
  only:
    - tags@gitlab-org/omnibus-gitlab
    - branches@gitlab-org/omnibus-gitlab

# Runs on dev.gitlab.org
.branch_template: &branch_build
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
    - echo $PACKAGECLOUD_REPO
    - make populate_cache
    - make restore_cache_bundle
    - make test
    - make pack_cache_bundle
    - rm -rf /var/cache/omnibus/pkg
  tags:
  - docker-builder
  only:
    - branches@gitlab/omnibus-gitlab

.rpi_branch_template: &rpi_branch_build
  stage: extra
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target RASPBERRY_REPO=raspberry-pi2)
    - echo $PACKAGECLOUD_REPO
    - make populate_cache
    - make restore_cache_bundle
    - if ./support/is_gitlab_ee.sh; then exit 0; else make test;fi
    - make pack_cache_bundle
    - rm -rf /var/cache/omnibus/pkg
  tags:
  - docker-rpi-builder
  only:
  - branches@gitlab/omnibus-gitlab

.tag_template: &tag_build
  stage: package
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
    - echo $PACKAGECLOUD_REPO
    - make populate_cache
    - make restore_cache_bundle
    - make do_release
    - make pack_cache_bundle
    - rm -rf /var/cache/omnibus/pkg
  tags:
  - docker-builder
  only:
    - tags@gitlab/omnibus-gitlab

.rpi_tag_template: &rpi_tag_build
  stage: extra
  script:
    - echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa
    - ssh-keyscan -H dev.gitlab.org > ~/.ssh/known_hosts
    - chmod -R 0600 ~/.ssh/
    - echo -e "[default]\naws_access_key_id = $AWS_ACCESS_KEY_ID \naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
    - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target RASPBERRY_REPO=raspberry-pi2)
    - echo $PACKAGECLOUD_REPO
    - make populate_cache
    - make restore_cache_bundle
    - if ./support/is_gitlab_ee.sh; then exit 0; else make do_rpi2_release;fi
    - make pack_cache_bundle
    - rm -rf /var/cache/omnibus/pkg
  tags:
  - docker-rpi-builder
  only:
    - tags@gitlab/omnibus-gitlab

Docker master:
  stage: extra
  script:
  - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
  - echo $PACKAGECLOUD_REPO
  - make do_docker_master
  tags:
  - docker-build
  only:
    - branches@gitlab/omnibus-gitlab

Docker:
  stage: extra
  script:
  - export PACKAGECLOUD_REPO=$(bundle exec rake repository:target)
  - echo $PACKAGECLOUD_REPO
  - make do_docker_release
  tags:
  - docker-build
  only:
    - tags@gitlab/omnibus-gitlab

# GitLab.com only
Ubuntu 12.04 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:precise"
  cache:
    paths:
    - gems
  <<: *run_rspec
Ubuntu 14.04 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:trusty"
  cache:
    paths:
    - gems
  <<: *run_rspec
Ubuntu 16.04 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:xenial"
  cache:
    paths:
    - gems
  <<: *run_rspec
Debian 7 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:wheezy"
  cache:
    paths:
    - gems
  <<: *run_rspec
Debian 8 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:jessie"
  cache:
    paths:
    - gems
  <<: *run_rspec
Centos 6 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:centos6"
  cache:
    paths:
    - gems
  <<: *run_rspec
Centos 7 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:centos7"
  cache:
    paths:
    - gems
  <<: *run_rspec
OpenSUSE 13.2 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:opensuse13.2"
  cache:
    paths:
    - gems
  <<: *run_rspec
OpenSUSE 42.1 specs:
  image: "registry.gitlab.com/gitlab-org/omnibus-gitlab:opensuse42.1"
  cache:
    paths:
    - gems
  <<: *run_rspec

# dev.gitlab.org only
Ubuntu 12.04:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:precise"
  cache:
    key: "Ubuntu 12.04 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Ubuntu 14.04:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:trusty"
  cache:
    key: "Ubuntu 14.04 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Ubuntu 16.04:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:xenial"
  cache:
    key: "Ubuntu 16.04 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Debian 7:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:wheezy"
  cache:
    key: "Debian 7 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Debian 8:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:jessie"
  cache:
    key: "Debian 8 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Centos 6:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:centos6"
  cache:
    key: "Centos 6 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
Centos 7:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:centos7"
  cache:
    key: "Centos 7 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
OpenSUSE 13.2:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:opensuse13.2"
  cache:
    key: "OpenSUSE 13.2 branch"
    paths:
    - cache
    - gems
  <<: *tag_build
OpenSUSE 42.1:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:opensuse42.1"
  cache:
    key: "OpenSUSE 42.1 branch"
    paths:
    - cache
    - gems
  <<: *tag_build

Ubuntu 12.04 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:precise"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
Ubuntu 14.04 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:trusty"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
Ubuntu 16.04 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:xenial"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
Debian 7 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:wheezy"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
Debian 8 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:jessie"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
CentOS 6 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:centos6"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
CentOS 7 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:centos7"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
OpenSUSE 13.2 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:opensuse13.2"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build
OpenSUSE 42.1 branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:opensuse42.1"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *branch_build

Raspberry Pi 2 Jessie branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:raspbian-jessie"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *rpi_branch_build

Raspberry Pi 2 Wheezy branch:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:raspbian-wheezy"
  cache:
    key: "$CI_BUILD_NAME"
    paths:
    - cache
    - gems
  <<: *rpi_branch_build

Raspberry Pi 2 Wheezy:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:raspbian-wheezy"
  cache:
    key: "Raspberry Pi 2 Wheezy branch"
    paths:
    - cache
    - gems
  <<: *rpi_tag_build
Raspberry Pi 2 Jessie:
  image: "dev.gitlab.org:5005/cookbooks/gitlab-omnibus-builder:raspbian-jessie"
  cache:
    key: "Raspberry Pi 2 Jessie branch"
    paths:
    - cache
    - gems
  <<: *rpi_tag_build

notify:slack-fail:
  before_script: # Nothing
    - apk update && apk add git curl bash
  image: "alpine"
  stage: notification_fail
  script:
    - ./support/notify_slack.sh "#omnibus-builds" "(╯°□°)╯︵┻━┻  Build on \`$CI_BUILD_REF_NAME\` failed! Commit \`$(git log -1 --oneline | sed 's|\"|\\\\\"|g')\` See <https://dev.gitlab.org/gitlab/omnibus-gitlab/commit/"$CI_BUILD_REF"/builds>"
  when: on_failure
  only:
    - master
    - tags@gitlab/omnibus-gitlab

# Trigger docs build
# https://gitlab.com/gitlab-com/gitlab-docs/blob/master/README.md#deployment-process
trigger_docs:
  stage: package
  image: "alpine"
  before_script:
    - apk update && apk add curl
  variables:
    GIT_STRATEGY: none
  cache: {}
  artifacts: {}
  script:
    - "curl -X POST -F token=${DOCS_TRIGGER_TOKEN} -F ref=master -F variables[PROJECT]=omnibus https://gitlab.com/api/v3/projects/1794617/trigger/builds"
  only:
    - master@gitlab-org/omnibus-gitlab
