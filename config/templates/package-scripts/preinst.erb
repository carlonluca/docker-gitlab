#!/bin/sh
# GitLab pre-install script

DEST_DIR=<%= install_dir %>

mkdir -p /var/log/gitlab/reconfigure

skip_migrations_file=/etc/gitlab/skip-auto-migrations

pg_check() {
  # Check if an upgrade or installation. This file will exist only in an installation.
  # This is a redundant check as pg_check will only be executed if $1 matches
  # an upgrade.
  if [ -e "/opt/gitlab/embedded/bin/psql"] ; then

    # Check if psql version is less than 9.6 and notify user if it is.
    # In AWK, $NF will return the last column of the version output, which is
    # the version string. By doing $NF+0, we force awk to convert it to an
    # integer, so that we can do numerical comparison.
    if $(/opt/gitlab/embedded/bin/psql --version | awk '$NF+0 < 9.6 {exit 0}'); then
      notify
      notify "Your version of PostgreSQL is too old and no longer supported."
      notify "If you are on a version older than 8.15.0, and using omnibus' bundled PostgreSQL, you have to "
      notify "upgrade to GitLab 9.x.x first to get your PostgreSQL version automatically upgraded."
      notify "If you are on a version newer than 8.15.0, and using omnibus' bundled PostgreSQL, you can run "
      notify "the following command to upgrade your PostgreSQL to latest version:"
      notify "  sudo gitlab-ctl pg-upgrade"
      notify ""
      notify "You can check your PostgreSQL version using the following command"
      notify "  /opt/gitlab/embedded/bin/psql --version"
      notify ""
      notify "Upgrade failed. Retry the upgrade after your have upgraded your PostgreSQL version."
      exit 1
    fi
  fi
}

main() {
  if [ -e "${skip_migrations_file}" ] ; then
    # The user wants us to do nothing
    return
  fi

  if [ -d ${DEST_DIR}/service/unicorn ] ; then
    notify "Automatically backing up only the GitLab SQL database (excluding everything else!)"
    if ! ${DEST_DIR}/bin/gitlab-rake gitlab:backup:create SKIP=repositories,uploads,builds,artifacts,lfs,registry,pages ; then
      notify
      notify "Backup failed! If you want to skip this backup, run the following command and"
      notify "try again:"
      notify
      notify "  sudo touch ${skip_migrations_file}"
      notify
      exit 1
    fi
  fi
}

notify() {
  echo "gitlab preinstall: $1"
}

if [ -n "${GITLAB_DEBUG}" ] ; then
  notify "debug: arguments: $@"
fi

case "$1" in
  2)
    # Looks like an RPM upgrade
    pg_check
    main
    ;;
  upgrade)
    # Looks like a DEB upgrade
    pg_check
    main
    ;;
  *)
    # This is not an upgrade, nothing to do.
    ;;
esac
